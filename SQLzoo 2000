!IN       The expression subject IN ('Chemistry','Physics') can be used as a value - it will be 0 or 1.
!XOR      Exclusive OR (XOR) Either one or another, but not both
!REPLACE
!concat   The function concat is short for concatenate - you can use it to combine two or more strings. capital LIKE concat('%', name, '%')


!ROUND(f,p) returns f rounded to p decimal places.
The number of decimal places may be negative, this will round to the nearest 10 (when p is -1) or 100 (when p is -2) or 1000 (when p is -3) etc..
ROUND(7253.86, 0)    ->  7254
ROUND(7253.86, 1)    ->  7253.9
ROUND(7253.86,-3)    ->  7000


! LENGTH('Hello') -> 5 


! LEFT(s,n) allows you to extract n characters from the start of the string s.
  LEFT('Hello world', 4) -> 'Hell'


! You can use <> as the NOT EQUALS operator.


SELECT name, concat(ROUND(population/(SELECT population FROM world WHERE name LIKE 'Germany')*100, 0), '%') AS percentage
За подробностями в SQLZoo 04


!  The WHERE clause filters rows before the aggregation, the HAVING clause filters after the aggregation.

! We can use the word ALL to allow >= or > or < or <=to act over a list. For example, you can find the largest country in the world,
by population with this query:
SELECT name
  FROM world
 WHERE population >= ALL(SELECT population
                           FROM world
                          WHERE population>0)



Show the stadium and the number of goals scored in each stadium.
SELECT stadium, COUNT(player)
FROM game JOIN goal ON game.id = goal.matchid
GROUP BY stadium
!!! Если мы делаем GROUP BY стадион, то весь запрос начинает рассматриваться как запрос по стадиону, 
то есть даже COUNT будет считать кол-во игроков на конкретном стадионе!!! (А игроков мы считаем,
потому что запись о каждом игроке означает гол в той таблице)



! CASE WHEN
SELECT name, population
      ,CASE WHEN population<1000000 
            THEN 'small'
            WHEN population<10000000 
            THEN 'medium'
            ELSE 'large'
       END
  FROM bbc
  
  
  
  ! COALESCE takes any number of arguments and returns the first value that is not null.

  COALESCE(x,y,z) = x if x is not NULL
  COALESCE(x,y,z) = y if x is NULL and y is not NULL
  COALESCE(x,y,z) = z if x and y are NULL but z is not NULL
  COALESCE(x,y,z) = NULL if x and y and z are all NULL


  ! Здесь мы используем встроенные функции, которые возвращают компоненты даты - месяц (MONTH) и день (DAY) соответственно.
(Чтобы сортировать дату по месяцам, не обращая внимания на год, например)
  SELECT date 
  FROM Battles 
  ORDER BY MONTH(date), DAY(date);


  ! Есть операции пересечения INTERSECT, объединения UNION и исключения EXCEPT, как с кругами Эйлера.
  Следующие два запроса имеют один и тот же смысл.
  SELECT * FROM product
WHERE (maker = 'A' OR maker = 'B') AND type = 'pc';
 
  SELECT * FROM product
WHERE maker = 'A' OR maker = 'B'
INTERSECT
SELECT * FROM product
WHERE  type = 'pc';
  
  
  !Ниже приведен порядок обработки предложений в операторе SELECT:
 FROM
 WHERE
 GROUP BY
 HAVING
 SELECT
 ORDER BY
  
  
  
  
